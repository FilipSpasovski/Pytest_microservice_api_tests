name: API Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          apt-transport-https \
          ca-certificates \
          curl \
          gnupg \
          lsb-release
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build Docker image
      run: |
        docker build -t my-backend-service:latest -f challenge/backend/backend_service/Dockerfile challenge/backend/backend_service

    - name: Run Docker container
      run: docker run -d --name my-backend-service -p 3000:3000 my-backend-service:latest

    - name: Wait for backend to be ready
      run: |
        echo "Waiting for backend to start..."
        timeout 30s bash -c 'until curl -s http://localhost:3000/predictions/severity; do sleep 2; done'
        echo "Backend is ready!"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run API tests
      run: pytest --verbose --maxfail=3 --junitxml=test-results.xml

    - name: Upload Test Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pytest-report
        path: test-results.xml
        retention-days: 30
